name: Build grpc wheel on IBMZ

on:
  workflow_call:
    inputs:
      release:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.11"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: "linux/s390x"

      - name: Build grpcio wheel for Python ${{ matrix.python-version }}
        id: install
        run: |
          PY_VER=${{ matrix.python-version }}
          echo "Building grpcio==${{ inputs.release }} for Python $PY_VER"
          docker run --rm --platform "linux/s390x" \
            --mount "type=bind,src=$(pwd),dst=/build" \
            -w "/build" s390x/python:$PY_VER /bin/bash -ec "
              export GRPC_PYTHON_BUILD_SYSTEM_OPENSSL=1;
              pip install --upgrade pip setuptools;
              pip install grpcio==${{ inputs.release }};
              WHEEL_PATH=\$(find /root/.cache/pip/wheels/ -name 'grpcio*.whl');
              cp \$WHEEL_PATH /build/grpcio-${{ inputs.release }}-py${PY_VER/./}-s390x.whl;
            "

      - name: Create a tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "<>"
          git tag ${{ inputs.release }}
          git push origin ${{ inputs.release }} -f

      - name: Capture the file
        id: capture
        run: |
          WHEEL_PATHS=$(find $PWD -name "grpcio*.whl" | tr '\n' ' ')
          echo "Found $WHEEL_PATHS"
          echo "ARTIFACT=$WHEEL_PATHS" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ inputs.release }}
          tag_name: ${{ inputs.release }}
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ${{ steps.capture.outputs.ARTIFACT }}
          draft: false
          prerelease: false
